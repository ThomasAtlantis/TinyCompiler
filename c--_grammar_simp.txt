A0 -> A1 A2
A1 -> A3 A1 | null
A3 -> A4 qua_sav_func_name qua_new_synbl ( A5 ) { A6 qua_return }
A5 -> A7 A8 | null
A8 -> , A7 A8 | null
A7 -> A9 B0 qua_declare
B0 -> A4 qua_declare_id B1 | & A4 qua_declare_id
A2 -> main qua_sav_func_name ( ) { qua_new_synbl A6 qua_return }
A6 -> B2 A6 | null | B3 A6
B2 -> B4 | B5 | B6
B4 -> B7 ;
B6 -> if qua_gen_func_name ( B8 ) { qua_new_synbl A6 qua_return } B9
B9 -> else C0 | null
C0 -> { A6 } | B6
B5 -> while qua_gen_func_name ( B8 ) { qua_new_synbl A6 qua_return }
B5 -> for qua_gen_func_name qua_new_synbl ( C1 ; C2 ; C3 ) { A6 qua_return }
C1 -> B7 | null
C2 -> B8 | null
C3 -> B7 | null
B3 -> continue ; | break ;
C4 -> putc C5 | puts C6
C5 -> A4 | C7
C8 -> C9 | D0
C9 -> D1 = B8
D0 -> ( D2 )
D2 -> D3 D4 | null
D4 -> , D3 D4 | null
D3 -> A4 qua_check_def D1 | D5
D6 -> return
A9 -> int qua_int | float qua_float | bool qua_bool | char qua_char
B8 -> D7
D7 -> D8 D9
D9 -> > D8 | >= D8 | < D8 | <= D8 | == D8 | != D8 | null
D8 -> E0
E0 -> E1
E1 -> E2 E3
E3 -> + E2 qua+ E3 | - E2 qua- E3 | null
E2 -> E4 E5
E5 -> * E4 qua* E5 | / E4 qua/ E5 | null
E4 -> E6
E6 -> E7 | ! E7 | - E7 qua.
E7 -> A4 quap qua_check_def_e D1 | D5 quap | ( B8 )
B7 -> E8 | A4 qua_check_def C8 | return | C4
B7 -> struct qua_gen_func_name A4 qua_declare_struct_id E9
E9 -> A4 qua_struct_check_def
E9 -> { qua_struct_def qua_new_synbl_struct F0 ; F1 qua_return }
E8 -> A9 F2
F2 -> A4 qua_declare_id B1 qua_declare F3
B1 -> [ F4 qua_declare_arr ] | null
F3 -> = B8 | null
F0 -> A9 A4 D1 | struct A4 A4
F1 -> F0 ; F1 | null
A4 -> @I
F5 -> A4 qua_check_def | F4
D1 -> [ F5 ] | null
D5 -> F4 | F6 | F7
F4 -> @INT
F6 -> @FLT
C7 -> @CH
C6 -> @STR
F7 -> true | false
