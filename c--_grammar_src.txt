grammar.add("A0") >> "A1 A2 A1 A3";
grammar.add("A1") >> "A4 ;" | "null";
grammar.add("A3") >> "void main ( ) { A5 }";
grammar.add("A2") >> "A6 A2" | "null";
grammar.add("A6") >> "void A7 ( A8 ) { A5 }";
grammar.add("A8") >> "A9 B0";
grammar.add("B0") >> ", A9" | "null";
grammar.add("A9") >> "B1 B2" | "B3 B2";
grammar.add("B3") >> "B1 &";
grammar.add("A5") >> "B4 A5" | "null";
grammar.add("B4") >> "B5" | "B6" | "B7";
grammar.add("B5") >> "B8 ; B9";
grammar.add("B9") >> "B8 ; B9" | "null";
grammar.add("B7") >> "if ( C0 ) { A5 } C1";
grammar.add("C1") >> "else if ( C0 ) { A5 } C1" | "else { A5 }" | "null";
grammar.add("B6") >> "while ( C0 ) { A5 C2 A5 }";
grammar.add("B6") >> "for ( C3 ; C4 ; C5 ) { A5 C2 A5 }";
grammar.add("C3") >> "B8" | "null";
grammar.add("C4") >> "C0" | "null";
grammar.add("C5") >> "B8" | "null";
grammar.add("C2") >> "continue ;" | "break ;";
grammar.add("B8") >> "A4" | "C6" | "return" | "C7";
grammar.add("C7") >> "put C8" | "put C9" | "put D0";
grammar.add("D1") >> "= C0" | "null";
grammar.add("C6") >> "D2 = C0";
grammar.add("D3") >> "return";
grammar.add("B1") >> "int" | "float" | "bool" | "char";
grammar.add("D4") >> "@C";
grammar.add("D2") >> "B2";
grammar.add("C0") >> "D5" | "D6";
grammar.add("D5") >> "D7 D8";
grammar.add("D8") >> "|| D7 D8" | "null";
grammar.add("D7") >> "D9 E0";
grammar.add("E0") >> "&& D9 E0" | "null";
grammar.add("D9") >> "E1";
grammar.add("E1") >> "E2" | "D6";
grammar.add("E2") >> "E3 E4";
grammar.add("E4") >> "> E3" | ">= E3" | "< E3" | "<= E3" | "== E3" | "!= E3" | "null";
grammar.add("E3") >> "E5";
grammar.add("E5") >> "E6" | "D6";
grammar.add("E6") >> "E7 E8";
grammar.add("E8") >> "+ E7 E8" | "- E7 E8" | "null";
grammar.add("E7") >> "E9 F0";
grammar.add("F0") >> "* E9 F0" | "/ E9 F0" | "null";
grammar.add("E9") >> "F1";
grammar.add("F1") >> "F2" | "D6";
grammar.add("F2") >> "F3 F4";
grammar.add("F4") >> "| F3 F4" | "null";
grammar.add("F3") >> "F5 F6";
grammar.add("F6") >> "& F5 F6" | "null";
grammar.add("F5") >> "D6";
grammar.add("D6") >> "F7" | "! F7" | "- F7" | "~ F7";
grammar.add("F7") >> "B2" | "D4" | "( C0 )";
grammar.add("B8") >> "F8";
grammar.add("A4") >> "B1 F9 D1";
grammar.add("A4") >> "B1 G0 [ G1 ]";
grammar.add("A4") >> "struct G2 G3";
grammar.add("G4") >> "B1 F9";
grammar.add("G4") >> "B1 G0 [ G1 ]";
grammar.add("G4") >> "struct G2 G3";
grammar.add("F9") >> "G5" | "G6" | "G7";
grammar.add("F8") >> "struct G2 { G4 ; G8 }";
grammar.add("G8") >> "G4 ; G8" | "null";
grammar.add("G9") >> "A7" | "B2" | "G2";
grammar.add("G1") >> "G5" | "H0";
grammar.add("B2") >> "G5" | "G6" | "G7" | "G3" | "G0 [ G1 ]";
grammar.add("A7") >> "@FUNC";
grammar.add("G2") >> "@T";
grammar.add("G3") >> "@S";
grammar.add("C8") >> "@CH";
grammar.add("G5") >> "@I";
grammar.add("G6") >> "@F";
grammar.add("G7") >> "@B";
grammar.add("G0") >> "@A";
grammar.add("D4") >> "H0" | "H1" | "H2";
grammar.add("H0") >> "@C_I";
grammar.add("H1") >> "@C_F";
grammar.add("C9") >> "@C_CH";
grammar.add("D0") >> "@C_S";
grammar.add("H2") >> "true" | "false";
